definitions:
  dto.FakeCaptchaRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  dto.FakeCaptchaResponse:
    properties:
      code:
        type: integer
      status:
        type: string
    type: object
  dto.GenerateParams:
    properties:
      params:
        additionalProperties:
          type: string
        type: object
      repo:
        type: string
      service:
        type: string
    required:
    - repo
    type: object
  dto.GetAuthorizeResponse:
    properties:
      paths:
        items:
          type: string
        type: array
      roleID:
        type: string
    type: object
  dto.GithubToken:
    properties:
      accessToken:
        description: |-
          AccessToken is the token that authorizes and authenticates
          the requests.
        type: string
      expiry:
        description: |-
          Expiry is the optional expiration time of the access token.

          If zero, TokenSource implementations will reuse the same
          token forever and RefreshToken or equivalent
          mechanisms for that TokenSource will not be used.
        type: string
      refreshToken:
        description: |-
          RefreshToken is a token that's used by the application
          (as opposed to the user) to refresh the access token
          if it expires.
        type: string
      tokenType:
        description: |-
          TokenType is the type of token.
          The Type method returns either this or "Bearer", the default.
        type: string
    type: object
  dto.LoginResponse:
    properties:
      code:
        type: integer
      expire:
        type: string
      token:
        type: string
    type: object
  dto.MenuBindAPIRequest:
    properties:
      menuID:
        type: string
      paths:
        items:
          type: string
        type: array
    required:
    - menuID
    - paths
    type: object
  dto.PasswordResetRequest:
    properties:
      password:
        type: string
      userID:
        type: string
    required:
    - password
    - userID
    type: object
  dto.SetAuthorizeRequest:
    properties:
      paths:
        items:
          type: string
        type: array
    type: object
  dto.TemplateGenerateReq:
    properties:
      accessToken:
        type: string
      email:
        type: string
      generate:
        $ref: '#/definitions/dto.GenerateParams'
      template:
        $ref: '#/definitions/dto.TemplateParams'
    type: object
  dto.TemplateGenerateResp:
    properties:
      branch:
        type: string
      repo:
        type: string
    type: object
  dto.TemplateGetBranchesResp:
    properties:
      branches:
        items:
          type: string
        type: array
    type: object
  dto.TemplateGetParamsResp:
    properties:
      params:
        items:
          $ref: '#/definitions/dto.TemplateParam'
        type: array
    type: object
  dto.TemplateGetPathResp:
    properties:
      path:
        items:
          type: string
        type: array
    type: object
  dto.TemplateParam:
    properties:
      name:
        type: string
      tip:
        type: string
    type: object
  dto.TemplateParams:
    properties:
      branch:
        type: string
      path:
        type: string
      source:
        type: string
    required:
    - source
    type: object
  dto.UpdateAuthorizeRequest:
    properties:
      keys:
        items:
          type: string
        type: array
      roleID:
        type: string
    required:
    - keys
    - roleID
    type: object
  dto.UpdateUserInfoRequest:
    properties:
      address:
        description: Address 地址
        type: string
      avatar:
        description: Avatar 头像
        type: string
      city:
        description: City 城市
        type: string
      country:
        description: Country 国家
        type: string
      email:
        description: Email 邮箱
        type: string
      group:
        description: Group 组别
        type: string
      name:
        description: Name 昵称
        type: string
      phone:
        description: Phone 手机号
        type: string
      profile:
        description: Profile 个人简介
        type: string
      province:
        description: Province 省份
        type: string
      signature:
        description: Signature 个性签名
        type: string
      tags:
        description: Tags 标签
        items:
          type: string
        type: array
      title:
        description: Title 职位
        type: string
    type: object
  models.API:
    properties:
      createdAt:
        description: CreatedAt create time
        type: string
      handler:
        type: string
      history:
        type: boolean
      id:
        description: ID primary key
        type: string
      method:
        type: string
      name:
        type: string
      path:
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
    type: object
  models.Language:
    properties:
      createdAt:
        description: CreatedAt create time
        type: string
      defines:
        description: Defines
        items:
          $ref: '#/definitions/models.LanguageDefine'
        type: array
      id:
        description: ID primary key
        type: string
      name:
        description: Name 名称
        type: string
      remark:
        description: Remark 备注
        type: string
      status:
        description: Statue 状态
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
    required:
    - name
    type: object
  models.LanguageDefine:
    properties:
      group:
        description: Group 分组
        type: string
      id:
        description: ID 主键
        type: string
      key:
        description: Key 键
        type: string
      value:
        description: Value 值
        type: string
    required:
    - group
    - key
    - value
    type: object
  models.Menu:
    properties:
      access:
        description: Access 权限配置，需要与 plugin-access 插件配合使用
        type: string
      component:
        description: Component 组件
        type: string
      createdAt:
        description: CreatedAt create time
        type: string
      fixSiderbar:
        description: FixedSideBar 固定菜单
        type: boolean
      fixedHeader:
        description: FixedHeader 固定顶栏
        type: boolean
      flatMenu:
        description: FlatMenu 子项往上提，仍旧展示
        type: boolean
      footerRender:
        description: FooterRender 不展示页脚
        type: boolean
      headerRender:
        description: HeaderRender 不展示顶栏
        type: boolean
      headerTheme:
        description: HeaderTheme 顶部导航的主题，mix 模式生效
        type: string
      hideChildrenInMenu:
        description: HideChildrenInMenu 隐藏子菜单
        type: boolean
      hideInBreadcrumb:
        description: HideInBreadcrumb 在面包屑中隐藏
        type: boolean
      hideInMenu:
        description: HideInMenu 隐藏自己和子菜单
        type: boolean
      icon:
        description: Icon 图标
        type: string
      id:
        description: ID primary key
        type: string
      layout:
        description: Layout 导航菜单的位置, side 为正常模式，top菜单显示在顶部，mix 两种兼有
        type: string
      menuHeaderRender:
        description: MenuHeaderRender 不展示菜单头部
        type: boolean
      menuRender:
        description: MenuRender 不展示菜单
        type: boolean
      method:
        description: Method 请求方法
        type: string
      name:
        description: Name 菜单名称
        type: string
      navTheme:
        description: NavTheme 导航菜单的主题
        type: string
      parentID:
        description: ParentID 父级id
        type: string
      path:
        description: |-
          // Title 菜单标题
          Title string `json:"title" gorm:"column:title;comment:菜单标题;type:varchar(255);not null"`
          Path 路由
        type: string
      permission:
        description: Permission 菜单权限
        type: string
      sort:
        description: Sort 排序
        type: integer
      status:
        description: Status 状态
        type: string
      target:
        description: Target 新页面打开
        type: string
      type:
        description: Type 菜单类型
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
    type: object
  models.Notice:
    properties:
      avatar:
        type: string
      createdAt:
        description: CreatedAt create time
        type: string
      datetime:
        type: string
      extra:
        type: string
      id:
        description: ID primary key
        type: string
      key:
        type: string
      read:
        type: boolean
      status:
        type: string
      title:
        type: string
      type:
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
      userID:
        type: string
    type: object
  models.Role:
    properties:
      createdAt:
        description: CreatedAt create time
        type: string
      default:
        type: boolean
      id:
        description: ID primary key
        type: string
      name:
        type: string
      remark:
        type: string
      root:
        type: boolean
      status:
        description: Status 状态
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
    type: object
  models.SystemConfig:
    properties:
      content:
        description: Content 内容
        type: string
      createdAt:
        description: CreatedAt create time
        type: string
      ext:
        description: Ext 扩展名
        type: string
      id:
        description: ID primary key
        type: string
      isBuiltIn:
        description: 内置配置
        type: boolean
      name:
        description: Name 名称
        type: string
      remark:
        description: remark 备注
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
    required:
    - ext
    - name
    type: object
  models.Task:
    properties:
      args:
        items:
          type: string
        type: array
      body:
        type: string
      checkedAt:
        type: string
      command:
        type: string
      createdAt:
        description: CreatedAt create time
        type: string
      endpoint:
        type: string
      entryID:
        type: integer
      id:
        description: ID primary key
        type: string
      metadata:
        type: string
      method:
        type: string
      name:
        type: string
      once:
        type: boolean
      protocol:
        type: string
      python:
        type: string
      remark:
        type: string
      spec:
        type: string
      status:
        description: Status 状态
        type: string
      timeout:
        type: integer
      updatedAt:
        description: UpdatedAt update time
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      avatar:
        type: string
      city:
        type: string
      country:
        type: string
      createdAt:
        description: CreatedAt create time
        type: string
      email:
        type: string
      group:
        type: string
      id:
        description: ID primary key
        type: string
      name:
        type: string
      oauth2:
        items:
          $ref: '#/definitions/models.UserOAuth2'
        type: array
      password:
        type: string
      permissions:
        additionalProperties:
          type: boolean
        type: object
      phone:
        type: string
      profile:
        type: string
      province:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      signature:
        type: string
      status:
        description: Status 状态
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
      username:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      oauth2:
        items:
          $ref: '#/definitions/models.UserOAuth2'
        type: array
      password:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      status:
        description: Status 状态
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  models.UserOAuth2:
    properties:
      address:
        type: string
      birthdata:
        type: string
      createdAt:
        description: CreatedAt create time
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      family_name:
        type: string
      gender:
        type: string
      given_name:
        type: string
      id:
        description: ID primary key
        type: string
      locale:
        type: string
      middle_name:
        type: string
      name:
        type: string
      nickname:
        type: string
      openID:
        type: string
      phone_number:
        type: string
      phone_number_verified:
        type: boolean
      picture:
        type: string
      preferred_username:
        type: string
      profile:
        type: string
      sub:
        type: string
      updatedAt:
        description: UpdatedAt update time
        type: string
      user_id:
        type: string
      website:
        type: string
      zoneinfo:
        type: string
    type: object
  response.Page:
    properties:
      current:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      errorCode:
        type: string
      errorMessage:
        type: string
      host:
        type: string
      showType:
        type: integer
      status:
        type: string
      success:
        type: boolean
      traceId:
        type: string
    type: object
info:
  contact: {}
  description: admin接口文档
  title: admin API
  version: 0.0.1
paths:
  /admin/api/apis:
    get:
      consumes:
      - application/json
      - application/json
      description: API列表数据
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.API'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: API列表数据
      tags:
      - api
    post:
      consumes:
      - application/json
      - application/json
      description: 创建API
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.API'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.API'
      security:
      - Bearer: []
      summary: 创建API
      tags:
      - api
  /admin/api/apis/{id}:
    delete:
      consumes:
      - application/json
      description: 删除API
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除API
      tags:
      - api
    get:
      consumes:
      - application/json
      description: 获取API
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.API'
      security:
      - Bearer: []
      summary: 获取API
      tags:
      - api
    put:
      consumes:
      - application/json
      - application/json
      description: 更新API
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.API'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.API'
      security:
      - Bearer: []
      summary: 更新API
      tags:
      - api
  /admin/api/github/callback:
    get:
      consumes:
      - application/json
      description: github回调
      parameters:
      - description: code
        in: query
        name: code
        required: true
        type: string
      - description: state
        in: query
        name: state
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GithubToken'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: github回调
      tags:
      - generator
  /admin/api/github/get-login-url:
    get:
      consumes:
      - application/json
      description: 获取github登录地址
      parameters:
      - description: state
        in: query
        name: state
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 获取github登录地址
      tags:
      - generator
  /admin/api/languages:
    get:
      consumes:
      - application/json
      description: Language列表数据
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Language'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: Language列表数据
      tags:
      - language
    post:
      consumes:
      - application/json
      description: 创建Language
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Language'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Language'
      security:
      - Bearer: []
      summary: 创建Language
      tags:
      - language
  /admin/api/languages/{id}:
    delete:
      description: 删除Language
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除Language
      tags:
      - language
    get:
      description: 获取Language
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Language'
      security:
      - Bearer: []
      summary: 获取Language
      tags:
      - language
    put:
      consumes:
      - application/json
      description: 更新Language
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Language'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Language'
      security:
      - Bearer: []
      summary: 更新Language
      tags:
      - language
  /admin/api/menu/api/{id}:
    get:
      description: 获取菜单下的接口
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Menu'
            type: array
      security:
      - Bearer: []
      summary: 获取菜单下的接口
      tags:
      - menu
  /admin/api/menu/authorize:
    get:
      consumes:
      - application/json
      description: 获取菜单权限
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/models.Menu'
              - properties:
                  children:
                    items:
                      $ref: '#/definitions/models.Menu'
                    type: array
                type: object
            type: array
      security:
      - Bearer: []
      summary: 获取菜单权限
      tags:
      - menu
  /admin/api/menu/authorize/{id}:
    put:
      consumes:
      - application/json
      description: 更新菜单权限
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAuthorizeRequest'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 更新菜单权限
      tags:
      - menu
  /admin/api/menu/bind-api:
    post:
      consumes:
      - application/json
      description: 绑定菜单下的接口
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.MenuBindAPIRequest'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 绑定菜单下的接口
      tags:
      - menu
  /admin/api/menu/tree:
    get:
      description: 获取菜单树
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/models.Menu'
              - properties:
                  children:
                    items:
                      $ref: '#/definitions/models.Menu'
                    type: array
                type: object
            type: array
      security:
      - Bearer: []
      summary: 获取菜单树
      tags:
      - menu
  /admin/api/menus:
    get:
      consumes:
      - application/json
      description: 菜单列表数据
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: parentID
        in: query
        name: parentID
        type: string
      - description: type
        in: query
        name: type
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Menu'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 菜单列表数据
      tags:
      - menu
    post:
      consumes:
      - application/json
      description: 创建菜单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Menu'
      security:
      - Bearer: []
      summary: 创建菜单
      tags:
      - menu
  /admin/api/menus/{id}:
    delete:
      description: 删除菜单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除菜单
      tags:
      - menu
    get:
      description: 获取菜单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: preloads
        in: query
        items:
          type: string
        name: preloads
        type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Menu'
      security:
      - Bearer: []
      summary: 获取菜单
      tags:
      - menu
    put:
      consumes:
      - application/json
      description: 更新菜单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Menu'
      security:
      - Bearer: []
      summary: 更新菜单
      tags:
      - menu
  /admin/api/model/migrate/{id}:
    get:
      description: 迁移虚拟模型
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 迁移虚拟模型
      tags:
      - model
  /admin/api/notice/unread:
    get:
      consumes:
      - application/json
      description: 获取未读通知列表
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Notice'
            type: array
      security:
      - Bearer: []
      summary: 获取未读通知列表
      tags:
      - notice
  /admin/api/notices:
    get:
      consumes:
      - application/json
      description: 通知列表数据
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: userID
        in: query
        name: userID
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Notice'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 通知列表数据
      tags:
      - notice
    post:
      consumes:
      - application/json
      description: 创建通知
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Notice'
      responses:
        "201":
          description: Created
      security:
      - Bearer: []
      summary: 创建通知
      tags:
      - notice
  /admin/api/notices/{id}:
    delete:
      description: 删除通知
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除通知
      tags:
      - notice
    get:
      consumes:
      - application/json
      description: 获取通知
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Notice'
      security:
      - Bearer: []
      summary: 获取通知
      tags:
      - notice
    put:
      consumes:
      - application/json
      description: 更新通知
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Notice'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 更新通知
      tags:
      - notice
  /admin/api/role/authorize/{roleID}:
    get:
      consumes:
      - application/json
      description: 获取角色授权
      parameters:
      - description: roleID
        in: path
        name: roleID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetAuthorizeResponse'
      security:
      - Bearer: []
      summary: 获取角色授权
      tags:
      - role
    post:
      description: 给角色授权
      parameters:
      - description: roleID
        in: path
        name: roleID
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SetAuthorizeRequest'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 角色授权
      tags:
      - role
  /admin/api/roles:
    get:
      consumes:
      - application/json
      description: 角色列表
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      - description: id
        in: query
        name: id
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: remark
        in: query
        name: remark
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Role'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 角色列表
      tags:
      - role
    post:
      consumes:
      - application/json
      description: 创建角色
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Role'
      security:
      - Bearer: []
      summary: 创建角色
      tags:
      - role
  /admin/api/roles/{id}:
    delete:
      description: 删除角色
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除角色
      tags:
      - role
    get:
      description: 获取角色
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      security:
      - Bearer: []
      summary: 获取角色
      tags:
      - role
    put:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      security:
      - Bearer: []
      summary: 更新角色
      tags:
      - role
  /admin/api/system-configs:
    get:
      consumes:
      - application/json
      description: 系统配置列表数据
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.SystemConfig'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 系统配置列表数据
      tags:
      - system_config
    post:
      consumes:
      - application/json
      description: 创建系统配置
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SystemConfig'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SystemConfig'
      security:
      - Bearer: []
      summary: 创建系统配置
      tags:
      - system_config
  /admin/api/system-configs/{id}:
    delete:
      description: 删除系统配置
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除系统配置
      tags:
      - system_config
    get:
      description: 获取系统配置
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SystemConfig'
      security:
      - Bearer: []
      summary: 获取系统配置
      tags:
      - system_config
    put:
      consumes:
      - application/json
      description: 更新系统配置
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SystemConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SystemConfig'
      security:
      - Bearer: []
      summary: 更新系统配置
      tags:
      - system_config
  /admin/api/task/{operate}/{id}:
    get:
      description: 操作任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 操作类型
        in: path
        name: operate
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 操作任务
      tags:
      - task
  /admin/api/tasks:
    get:
      consumes:
      - application/json
      description: 任务列表
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      - description: id
        in: query
        name: id
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: remark
        in: query
        name: remark
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 任务列表
      tags:
      - task
    post:
      consumes:
      - application/json
      description: 创建任务
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
      security:
      - Bearer: []
      summary: 创建任务
      tags:
      - task
  /admin/api/tasks/{id}:
    delete:
      description: 删除任务
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除任务
      tags:
      - task
    get:
      description: 获取任务
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
      security:
      - Bearer: []
      summary: 获取任务
      tags:
      - task
    put:
      consumes:
      - application/json
      description: 更新任务
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
      security:
      - Bearer: []
      summary: 更新任务
      tags:
      - task
  /admin/api/template/generate:
    post:
      consumes:
      - application/json
      description: 从模版生成代码
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TemplateGenerateReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TemplateGenerateResp'
      security:
      - Bearer: []
      summary: 从模版生成代码
      tags:
      - generator
  /admin/api/template/get-branches:
    get:
      consumes:
      - application/json
      description: 获取template分支
      parameters:
      - description: template source
        in: query
        name: source
        required: true
        type: string
      - description: access token
        in: query
        name: accessToken
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TemplateGetBranchesResp'
      security:
      - Bearer: []
      summary: 获取template分支
      tags:
      - generator
  /admin/api/template/get-params:
    get:
      consumes:
      - application/json
      description: 获取template参数配置
      parameters:
      - description: template source
        in: query
        name: source
        required: true
        type: string
      - description: branch default:HEAD
        in: query
        name: branch
        type: string
      - description: path default:.
        in: query
        name: path
        type: string
      - description: access token
        in: query
        name: accessToken
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TemplateGetParamsResp'
      security:
      - Bearer: []
      summary: 获取template参数配置
      tags:
      - generator
  /admin/api/template/get-path:
    get:
      consumes:
      - application/json
      description: 获取template文件路径list
      parameters:
      - description: template source
        in: query
        name: source
        required: true
        type: string
      - description: branch default:HEAD
        in: query
        name: branch
        type: string
      - description: access token
        in: query
        name: accessToken
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TemplateGetPathResp'
      security:
      - Bearer: []
      summary: 获取template文件路径list
      tags:
      - generator
  /admin/api/user/{userID}/password-reset:
    put:
      consumes:
      - application/json
      description: 重置密码
      parameters:
      - description: userID
        in: path
        name: userID
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PasswordResetRequest'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 重置密码
      tags:
      - user
  /admin/api/user/fakeCaptcha:
    post:
      consumes:
      - application/json
      description: 获取验证码
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.FakeCaptchaRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FakeCaptchaResponse'
      summary: 获取验证码
      tags:
      - user
  /admin/api/user/login/account:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      responses:
        "200":
          description: '{"code": 200, "expire": "2023-12-10T12:31:30+08:00", "token":
            "xxx"}'
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      summary: 登录
      tags:
      - user
  /admin/api/user/userInfo:
    get:
      consumes:
      - application/json
      description: 获取登录用户信息
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: 获取登录用户信息
      tags:
      - user
    put:
      consumes:
      - application/json
      description: 更新用户信息
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserInfoRequest'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 更新用户信息
      tags:
      - user
  /admin/api/users:
    get:
      consumes:
      - application/json
      description: 用户列表
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      - description: id
        in: query
        name: id
        type: string
      - description: name
        in: query
        name: name
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Page'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 用户列表
      tags:
      - user
    post:
      consumes:
      - application/json
      description: 创建用户
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: 创建用户
      tags:
      - user
  /admin/api/users/{id}:
    delete:
      description: 删除用户
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: 删除用户
      tags:
      - user
    get:
      description: 获取用户
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: 获取用户
      tags:
      - user
    put:
      consumes:
      - application/json
      description: 更新用户
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: 更新用户
      tags:
      - user
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
